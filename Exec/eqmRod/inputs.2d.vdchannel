#*******************************************************************************
# INPUTS.2D.POISEUILLE
#*******************************************************************************

# turn on tiling for testing
fabarray.mfiter_tile_size = 8 8 8 



#NOTE: You may set *either* max_step or stop_time, or you may set them both.

# Maximum number of coarse grid timesteps to be taken, if stop_time is
#  not reached first.
max_step 				= -1

# Time at which calculation stops, if max_step is not reached first.
stop_time 				= 2511
# Tolerance for assuming system has reached steady-state
#ns.stop_when_steady 	= 0
#ns.steady_tol 		= 1.0e-5

ns.do_vorticity_ref = 0
ns.do_density_ref = 1
ns.do_refine_outflow = 1
ns.do_derefine_outflow = 0

#*******************************************************************************

# Number of cells in each coordinate direction at the coarsest level
amr.n_cell 			= 128 20
amr.max_grid_size		= 16
amr.blocking_factor		= 4
#*******************************************************************************

# Maximum level (defaults to 0 for single level calculation)
amr.max_level			=  2 # maximum number of levels of refinement
amr.denfrac 			= 0.35


#*******************************************************************************

# Sets the "NavierStokes" code to not be verbose
ns.v                    = 10

#*******************************************************************************

# Sets the "amr" code to be verbose
amr.v                   = 1

#*******************************************************************************

# Interval (in number of coarse timesteps) between checkpoint(restart) files
amr.check_int			= -1

#*******************************************************************************

# Interval (in number of coarse timesteps) between plot files
amr.plot_int			= 100

#*******************************************************************************

# CFL number to be used in calculating the time step : dt = dx / max(velocity)
ns.cfl                  = 0.5  # CFL number used to set dt
ns.testNumber 		= 3
#*******************************************************************************

# Factor by which the first time is shrunk relative to CFL constraint
ns.init_shrink          = 0.3  # factor which multiplies the very first time step
ns.init_iter            = 0

#*******************************************************************************

# Viscosity coefficient 
ns.vel_visc_coef        = 0.0
ns.do_variable_visc 	= 0

#*******************************************************************************

# Diffusion coefficient for tracer
ns.scal_diff_coefs      = 0.0

#*******************************************************************************

# Forcing term defaults to  rho * abs(gravity) "down"
ns.gravity              = 0.0  

#*******************************************************************************

# Name of the file which specifies problem-specific parameters (defaults to "probin")
amr.probin_file 		= probin.2d.vdchannel 

#*******************************************************************************

# Set to 0 if x-y coordinate system, set to 1 if r-z.
geometry.coord_sys   	=  0

#*******************************************************************************

# Physical dimensions of the low end of the domain.
geometry.prob_lo     	=  0. -40. 

# Physical dimensions of the high end of the domain.
geometry.prob_hi     	=  500. 40.

#*******************************************************************************

#Set to 1 if periodic in that direction
geometry.is_periodic 	=  0 0

#*******************************************************************************

# Boundary conditions on the low end of the domain.
ns.lo_bc             	= 1 4 

# Boundary conditions on the high end of the domain.
ns.hi_bc             	= 2 4

# 0 = Interior/Periodic  3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall

#*******************************************************************************

# Continue from checkpoint 
# amr.restart 			= chk00000

#*******************************************************************************

# Write all derived quantities to plot files
amr.derive_plot_vars    = ALL

#*******************************************************************************
